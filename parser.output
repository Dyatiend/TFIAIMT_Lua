State 14 conflicts: 1 shift/reduce


Grammar

    0 $accept: chunk $end

    1 chunk: block

    2 block: block_tmp
    3      | block_tmp ret_stmt
    4      | block_tmp ret_stmt ';'

    5 block_tmp: /* empty */
    6          | block_tmp stmt
    7          | block_tmp ';'

    8 stmt: var_list '=' expr_seq
    9     | function_call
   10     | BREAK
   11     | DO block END
   12     | WHILE expr DO block END
   13     | REPEAT block UNTIL expr
   14     | IF expr THEN block elseif_seq END
   15     | IF expr THEN block elseif_seq ELSE block END
   16     | FOR IDENT '=' expr ',' expr DO block END
   17     | FOR IDENT '=' expr ',' expr ',' expr DO block END
   18     | FOR ident_list IN expr_seq DO block END
   19     | FUNCTION IDENT '(' param_list ')' block END
   20     | LOCAL FUNCTION IDENT '(' param_list ')' block END
   21     | LOCAL ident_list
   22     | LOCAL ident_list '=' expr_seq

   23 elseif_seq: /* empty */
   24           | elseif_seq ELSEIF expr THEN block

   25 ret_stmt: RETURN
   26         | RETURN expr_seq

   27 var_list: var
   28         | var_list ',' var

   29 var: IDENT
   30    | var '[' expr ']'
   31    | var '.' IDENT
   32    | function_call '[' expr ']'
   33    | function_call '.' IDENT
   34    | '(' expr ')' '[' expr ']'
   35    | '(' expr ')' '.' IDENT

   36 function_call: IDENT args

   37 ident_list: IDENT
   38           | ident_list ',' IDENT

   39 expr_seq: expr
   40         | expr_seq ',' expr

   41 expr: NIL
   42     | FALSE
   43     | TRUE
   44     | NUMBER
   45     | STRING
   46     | VAR_ARG
   47     | var
   48     | function_call
   49     | '(' expr ')'
   50     | table_constructor
   51     | expr '-' expr
   52     | expr '*' expr
   53     | expr '+' expr
   54     | expr '/' expr
   55     | expr FLOOR_DIV expr
   56     | expr '^' expr
   57     | expr '%' expr
   58     | expr '&' expr
   59     | expr '~' expr
   60     | expr '|' expr
   61     | expr CONCAT expr
   62     | expr '<' expr
   63     | expr LE expr
   64     | expr '>' expr
   65     | expr GE expr
   66     | expr EQL expr
   67     | expr NOT_EQL expr
   68     | expr AND expr
   69     | expr OR expr
   70     | '-' expr
   71     | NOT expr
   72     | '#' expr
   73     | '~' expr

   74 args: '(' ')'
   75     | '(' expr_seq ')'
   76     | table_constructor
   77     | STRING

   78 param_list: /* empty */
   79           | ident_list
   80           | ident_list ',' VAR_ARG
   81           | VAR_ARG

   82 table_constructor: '{' '}'
   83                  | '{' field_list '}'
   84                  | '{' field_list field_sep '}'

   85 field_list: field
   86           | field_list field_sep field

   87 field: IDENT '=' expr
   88      | '[' expr ']' '=' expr
   89      | expr

   90 field_sep: ','
   91          | ';'


Terminals, with rules where they appear

$end (0) 0
'#' (35) 72
'%' (37) 57
'&' (38) 58
'(' (40) 19 20 34 35 49 74 75
')' (41) 19 20 34 35 49 74 75
'*' (42) 52
'+' (43) 53
',' (44) 16 17 28 38 40 80 90
'-' (45) 51 70
'.' (46) 31 33 35
'/' (47) 54
';' (59) 4 7 91
'<' (60) 62
'=' (61) 8 16 17 22 87 88
'>' (62) 64
'[' (91) 30 32 34 88
']' (93) 30 32 34 88
'^' (94) 56
'{' (123) 82 83 84
'|' (124) 60
'}' (125) 82 83 84
'~' (126) 59 73
error (256)
AND (258) 68
BREAK (259) 10
DO (260) 11 12 16 17 18
ELSE (261) 15
ELSEIF (262) 24
END (263) 11 12 14 15 16 17 18 19 20
FALSE (264) 42
FOR (265) 16 17 18
FUNCTION (266) 19 20
IF (267) 14 15
IN (268) 18
LOCAL (269) 20 21 22
NIL (270) 41
NOT (271) 71
OR (272) 69
RETURN (273) 25 26
REPEAT (274) 13
THEN (275) 14 15 24
TRUE (276) 43
UNTIL (277) 13
WHILE (278) 12
EQL (279) 66
NOT_EQL (280) 67
LE (281) 63
GE (282) 65
FLOOR_DIV (283) 55
CONCAT (284) 61
VAR_ARG (285) 46 80 81
IDENT (286) 16 17 19 20 29 31 33 35 36 37 38 87
NUMBER (287) 44
STRING (288) 45 77
UNARY (289)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
chunk (58)
    on left: 1, on right: 0
block (59)
    on left: 2 3 4, on right: 1 11 12 13 14 15 16 17 18 19 20 24
block_tmp (60)
    on left: 5 6 7, on right: 2 3 4 6 7
stmt (61)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22,
    on right: 6
elseif_seq (62)
    on left: 23 24, on right: 14 15 24
ret_stmt (63)
    on left: 25 26, on right: 3 4
var_list (64)
    on left: 27 28, on right: 8 28
var (65)
    on left: 29 30 31 32 33 34 35, on right: 27 28 30 31 47
function_call (66)
    on left: 36, on right: 9 32 33 48
ident_list (67)
    on left: 37 38, on right: 18 21 22 38 79 80
expr_seq (68)
    on left: 39 40, on right: 8 18 22 26 40 75
expr (69)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59 60 61 62 63 64 65 66 67 68 69 70 71 72 73, on right: 12 13 14
    15 16 17 24 30 32 34 35 39 40 49 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67 68 69 70 71 72 73 87 88 89
args (70)
    on left: 74 75 76 77, on right: 36
param_list (71)
    on left: 78 79 80 81, on right: 19 20
table_constructor (72)
    on left: 82 83 84, on right: 50 76
field_list (73)
    on left: 85 86, on right: 83 84 86
field (74)
    on left: 87 88 89, on right: 85 86
field_sep (75)
    on left: 90 91, on right: 84 86


state 0

    0 $accept: . chunk $end

    $default  reduce using rule 5 (block_tmp)

    chunk      go to state 1
    block      go to state 2
    block_tmp  go to state 3


state 1

    0 $accept: chunk . $end

    $end  shift, and go to state 4


state 2

    1 chunk: block .

    $default  reduce using rule 1 (chunk)


state 3

    2 block: block_tmp .
    3      | block_tmp . ret_stmt
    4      | block_tmp . ret_stmt ';'
    6 block_tmp: block_tmp . stmt
    7          | block_tmp . ';'

    BREAK     shift, and go to state 5
    DO        shift, and go to state 6
    FOR       shift, and go to state 7
    FUNCTION  shift, and go to state 8
    IF        shift, and go to state 9
    LOCAL     shift, and go to state 10
    RETURN    shift, and go to state 11
    REPEAT    shift, and go to state 12
    WHILE     shift, and go to state 13
    IDENT     shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16

    $default  reduce using rule 2 (block)

    stmt           go to state 17
    ret_stmt       go to state 18
    var_list       go to state 19
    var            go to state 20
    function_call  go to state 21


state 4

    0 $accept: chunk $end .

    $default  accept


state 5

   10 stmt: BREAK .

    $default  reduce using rule 10 (stmt)


state 6

   11 stmt: DO . block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 22
    block_tmp  go to state 3


state 7

   16 stmt: FOR . IDENT '=' expr ',' expr DO block END
   17     | FOR . IDENT '=' expr ',' expr ',' expr DO block END
   18     | FOR . ident_list IN expr_seq DO block END

    IDENT  shift, and go to state 23

    ident_list  go to state 24


state 8

   19 stmt: FUNCTION . IDENT '(' param_list ')' block END

    IDENT  shift, and go to state 25


state 9

   14 stmt: IF . expr THEN block elseif_seq END
   15     | IF . expr THEN block elseif_seq ELSE block END

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 40
    table_constructor  go to state 41


state 10

   20 stmt: LOCAL . FUNCTION IDENT '(' param_list ')' block END
   21     | LOCAL . ident_list
   22     | LOCAL . ident_list '=' expr_seq

    FUNCTION  shift, and go to state 42
    IDENT     shift, and go to state 43

    ident_list  go to state 44


state 11

   25 ret_stmt: RETURN .
   26         | RETURN . expr_seq

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    $default  reduce using rule 25 (ret_stmt)

    var                go to state 38
    function_call      go to state 39
    expr_seq           go to state 45
    expr               go to state 46
    table_constructor  go to state 41


state 12

   13 stmt: REPEAT . block UNTIL expr

    $default  reduce using rule 5 (block_tmp)

    block      go to state 47
    block_tmp  go to state 3


state 13

   12 stmt: WHILE . expr DO block END

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 48
    table_constructor  go to state 41


state 14

   29 var: IDENT .
   36 function_call: IDENT . args

    STRING  shift, and go to state 49
    '('     shift, and go to state 50
    '{'     shift, and go to state 37

    '('       [reduce using rule 29 (var)]
    $default  reduce using rule 29 (var)

    args               go to state 51
    table_constructor  go to state 52


state 15

    7 block_tmp: block_tmp ';' .

    $default  reduce using rule 7 (block_tmp)


state 16

   34 var: '(' . expr ')' '[' expr ']'
   35    | '(' . expr ')' '.' IDENT

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 53
    table_constructor  go to state 41


state 17

    6 block_tmp: block_tmp stmt .

    $default  reduce using rule 6 (block_tmp)


state 18

    3 block: block_tmp ret_stmt .
    4      | block_tmp ret_stmt . ';'

    ';'  shift, and go to state 54

    $default  reduce using rule 3 (block)


state 19

    8 stmt: var_list . '=' expr_seq
   28 var_list: var_list . ',' var

    '='  shift, and go to state 55
    ','  shift, and go to state 56


state 20

   27 var_list: var .
   30 var: var . '[' expr ']'
   31    | var . '.' IDENT

    '['  shift, and go to state 57
    '.'  shift, and go to state 58

    $default  reduce using rule 27 (var_list)


state 21

    9 stmt: function_call .
   32 var: function_call . '[' expr ']'
   33    | function_call . '.' IDENT

    '['  shift, and go to state 59
    '.'  shift, and go to state 60

    $default  reduce using rule 9 (stmt)


state 22

   11 stmt: DO block . END

    END  shift, and go to state 61


state 23

   16 stmt: FOR IDENT . '=' expr ',' expr DO block END
   17     | FOR IDENT . '=' expr ',' expr ',' expr DO block END
   37 ident_list: IDENT .

    '='  shift, and go to state 62

    $default  reduce using rule 37 (ident_list)


state 24

   18 stmt: FOR ident_list . IN expr_seq DO block END
   38 ident_list: ident_list . ',' IDENT

    IN   shift, and go to state 63
    ','  shift, and go to state 64


state 25

   19 stmt: FUNCTION IDENT . '(' param_list ')' block END

    '('  shift, and go to state 65


state 26

   42 expr: FALSE .

    $default  reduce using rule 42 (expr)


state 27

   41 expr: NIL .

    $default  reduce using rule 41 (expr)


state 28

   71 expr: NOT . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 66
    table_constructor  go to state 41


state 29

   43 expr: TRUE .

    $default  reduce using rule 43 (expr)


state 30

   46 expr: VAR_ARG .

    $default  reduce using rule 46 (expr)


state 31

   44 expr: NUMBER .

    $default  reduce using rule 44 (expr)


state 32

   45 expr: STRING .

    $default  reduce using rule 45 (expr)


state 33

   73 expr: '~' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 67
    table_constructor  go to state 41


state 34

   70 expr: '-' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 68
    table_constructor  go to state 41


state 35

   34 var: '(' . expr ')' '[' expr ']'
   35    | '(' . expr ')' '.' IDENT
   49 expr: '(' . expr ')'

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 69
    table_constructor  go to state 41


state 36

   72 expr: '#' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 70
    table_constructor  go to state 41


state 37

   82 table_constructor: '{' . '}'
   83                  | '{' . field_list '}'
   84                  | '{' . field_list field_sep '}'

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '['      shift, and go to state 72
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37
    '}'      shift, and go to state 73

    var                go to state 38
    function_call      go to state 39
    expr               go to state 74
    table_constructor  go to state 41
    field_list         go to state 75
    field              go to state 76


state 38

   30 var: var . '[' expr ']'
   31    | var . '.' IDENT
   47 expr: var .

    '['  shift, and go to state 57
    '.'  shift, and go to state 58

    $default  reduce using rule 47 (expr)


state 39

   32 var: function_call . '[' expr ']'
   33    | function_call . '.' IDENT
   48 expr: function_call .

    '['  shift, and go to state 59
    '.'  shift, and go to state 60

    $default  reduce using rule 48 (expr)


state 40

   14 stmt: IF expr . THEN block elseif_seq END
   15     | IF expr . THEN block elseif_seq ELSE block END
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    THEN       shift, and go to state 79
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96


state 41

   50 expr: table_constructor .

    $default  reduce using rule 50 (expr)


state 42

   20 stmt: LOCAL FUNCTION . IDENT '(' param_list ')' block END

    IDENT  shift, and go to state 97


state 43

   37 ident_list: IDENT .

    $default  reduce using rule 37 (ident_list)


state 44

   21 stmt: LOCAL ident_list .
   22     | LOCAL ident_list . '=' expr_seq
   38 ident_list: ident_list . ',' IDENT

    '='  shift, and go to state 98
    ','  shift, and go to state 64

    $default  reduce using rule 21 (stmt)


state 45

   26 ret_stmt: RETURN expr_seq .
   40 expr_seq: expr_seq . ',' expr

    ','  shift, and go to state 99

    $default  reduce using rule 26 (ret_stmt)


state 46

   39 expr_seq: expr .
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 39 (expr_seq)


state 47

   13 stmt: REPEAT block . UNTIL expr

    UNTIL  shift, and go to state 100


state 48

   12 stmt: WHILE expr . DO block END
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    DO         shift, and go to state 101
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96


state 49

   77 args: STRING .

    $default  reduce using rule 77 (args)


state 50

   74 args: '(' . ')'
   75     | '(' . expr_seq ')'

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    ')'      shift, and go to state 102
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr_seq           go to state 103
    expr               go to state 46
    table_constructor  go to state 41


state 51

   36 function_call: IDENT args .

    $default  reduce using rule 36 (function_call)


state 52

   76 args: table_constructor .

    $default  reduce using rule 76 (args)


state 53

   34 var: '(' expr . ')' '[' expr ']'
   35    | '(' expr . ')' '.' IDENT
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96
    ')'        shift, and go to state 104


state 54

    4 block: block_tmp ret_stmt ';' .

    $default  reduce using rule 4 (block)


state 55

    8 stmt: var_list '=' . expr_seq

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr_seq           go to state 105
    expr               go to state 46
    table_constructor  go to state 41


state 56

   28 var_list: var_list ',' . var

    IDENT  shift, and go to state 14
    '('    shift, and go to state 16

    var            go to state 106
    function_call  go to state 107


state 57

   30 var: var '[' . expr ']'

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 108
    table_constructor  go to state 41


state 58

   31 var: var '.' . IDENT

    IDENT  shift, and go to state 109


state 59

   32 var: function_call '[' . expr ']'

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 110
    table_constructor  go to state 41


state 60

   33 var: function_call '.' . IDENT

    IDENT  shift, and go to state 111


state 61

   11 stmt: DO block END .

    $default  reduce using rule 11 (stmt)


state 62

   16 stmt: FOR IDENT '=' . expr ',' expr DO block END
   17     | FOR IDENT '=' . expr ',' expr ',' expr DO block END

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 112
    table_constructor  go to state 41


state 63

   18 stmt: FOR ident_list IN . expr_seq DO block END

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr_seq           go to state 113
    expr               go to state 46
    table_constructor  go to state 41


state 64

   38 ident_list: ident_list ',' . IDENT

    IDENT  shift, and go to state 114


state 65

   19 stmt: FUNCTION IDENT '(' . param_list ')' block END

    VAR_ARG  shift, and go to state 115
    IDENT    shift, and go to state 43

    $default  reduce using rule 78 (param_list)

    ident_list  go to state 116
    param_list  go to state 117


state 66

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   71     | NOT expr .

    '^'  shift, and go to state 96

    $default  reduce using rule 71 (expr)


state 67

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   73     | '~' expr .

    '^'  shift, and go to state 96

    $default  reduce using rule 73 (expr)


state 68

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   70     | '-' expr .

    '^'  shift, and go to state 96

    $default  reduce using rule 70 (expr)


state 69

   34 var: '(' expr . ')' '[' expr ']'
   35    | '(' expr . ')' '.' IDENT
   49 expr: '(' expr . ')'
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96
    ')'        shift, and go to state 118


state 70

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   72     | '#' expr .

    '^'  shift, and go to state 96

    $default  reduce using rule 72 (expr)


state 71

   29 var: IDENT .
   36 function_call: IDENT . args
   87 field: IDENT . '=' expr

    STRING  shift, and go to state 49
    '='     shift, and go to state 119
    '('     shift, and go to state 50
    '{'     shift, and go to state 37

    $default  reduce using rule 29 (var)

    args               go to state 51
    table_constructor  go to state 52


state 72

   88 field: '[' . expr ']' '=' expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 120
    table_constructor  go to state 41


state 73

   82 table_constructor: '{' '}' .

    $default  reduce using rule 82 (table_constructor)


state 74

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   89 field: expr .

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 89 (field)


state 75

   83 table_constructor: '{' field_list . '}'
   84                  | '{' field_list . field_sep '}'
   86 field_list: field_list . field_sep field

    ';'  shift, and go to state 121
    ','  shift, and go to state 122
    '}'  shift, and go to state 123

    field_sep  go to state 124


state 76

   85 field_list: field .

    $default  reduce using rule 85 (field_list)


state 77

   68 expr: expr AND . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 125
    table_constructor  go to state 41


state 78

   69 expr: expr OR . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 126
    table_constructor  go to state 41


state 79

   14 stmt: IF expr THEN . block elseif_seq END
   15     | IF expr THEN . block elseif_seq ELSE block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 127
    block_tmp  go to state 3


state 80

   66 expr: expr EQL . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 128
    table_constructor  go to state 41


state 81

   67 expr: expr NOT_EQL . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 129
    table_constructor  go to state 41


state 82

   63 expr: expr LE . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 130
    table_constructor  go to state 41


state 83

   65 expr: expr GE . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 131
    table_constructor  go to state 41


state 84

   55 expr: expr FLOOR_DIV . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 132
    table_constructor  go to state 41


state 85

   61 expr: expr CONCAT . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 133
    table_constructor  go to state 41


state 86

   64 expr: expr '>' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 134
    table_constructor  go to state 41


state 87

   62 expr: expr '<' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 135
    table_constructor  go to state 41


state 88

   60 expr: expr '|' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 136
    table_constructor  go to state 41


state 89

   59 expr: expr '~' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 137
    table_constructor  go to state 41


state 90

   58 expr: expr '&' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 138
    table_constructor  go to state 41


state 91

   53 expr: expr '+' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 139
    table_constructor  go to state 41


state 92

   51 expr: expr '-' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 140
    table_constructor  go to state 41


state 93

   52 expr: expr '*' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 141
    table_constructor  go to state 41


state 94

   54 expr: expr '/' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 142
    table_constructor  go to state 41


state 95

   57 expr: expr '%' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 143
    table_constructor  go to state 41


state 96

   56 expr: expr '^' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 144
    table_constructor  go to state 41


state 97

   20 stmt: LOCAL FUNCTION IDENT . '(' param_list ')' block END

    '('  shift, and go to state 145


state 98

   22 stmt: LOCAL ident_list '=' . expr_seq

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr_seq           go to state 146
    expr               go to state 46
    table_constructor  go to state 41


state 99

   40 expr_seq: expr_seq ',' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 147
    table_constructor  go to state 41


state 100

   13 stmt: REPEAT block UNTIL . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 148
    table_constructor  go to state 41


state 101

   12 stmt: WHILE expr DO . block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 149
    block_tmp  go to state 3


state 102

   74 args: '(' ')' .

    $default  reduce using rule 74 (args)


state 103

   40 expr_seq: expr_seq . ',' expr
   75 args: '(' expr_seq . ')'

    ')'  shift, and go to state 150
    ','  shift, and go to state 99


state 104

   34 var: '(' expr ')' . '[' expr ']'
   35    | '(' expr ')' . '.' IDENT

    '['  shift, and go to state 151
    '.'  shift, and go to state 152


state 105

    8 stmt: var_list '=' expr_seq .
   40 expr_seq: expr_seq . ',' expr

    ','  shift, and go to state 99

    $default  reduce using rule 8 (stmt)


state 106

   28 var_list: var_list ',' var .
   30 var: var . '[' expr ']'
   31    | var . '.' IDENT

    '['  shift, and go to state 57
    '.'  shift, and go to state 58

    $default  reduce using rule 28 (var_list)


state 107

   32 var: function_call . '[' expr ']'
   33    | function_call . '.' IDENT

    '['  shift, and go to state 59
    '.'  shift, and go to state 60


state 108

   30 var: var '[' expr . ']'
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96
    ']'        shift, and go to state 153


state 109

   31 var: var '.' IDENT .

    $default  reduce using rule 31 (var)


state 110

   32 var: function_call '[' expr . ']'
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96
    ']'        shift, and go to state 154


state 111

   33 var: function_call '.' IDENT .

    $default  reduce using rule 33 (var)


state 112

   16 stmt: FOR IDENT '=' expr . ',' expr DO block END
   17     | FOR IDENT '=' expr . ',' expr ',' expr DO block END
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96
    ','        shift, and go to state 155


state 113

   18 stmt: FOR ident_list IN expr_seq . DO block END
   40 expr_seq: expr_seq . ',' expr

    DO   shift, and go to state 156
    ','  shift, and go to state 99


state 114

   38 ident_list: ident_list ',' IDENT .

    $default  reduce using rule 38 (ident_list)


state 115

   81 param_list: VAR_ARG .

    $default  reduce using rule 81 (param_list)


state 116

   38 ident_list: ident_list . ',' IDENT
   79 param_list: ident_list .
   80           | ident_list . ',' VAR_ARG

    ','  shift, and go to state 157

    $default  reduce using rule 79 (param_list)


state 117

   19 stmt: FUNCTION IDENT '(' param_list . ')' block END

    ')'  shift, and go to state 158


state 118

   34 var: '(' expr ')' . '[' expr ']'
   35    | '(' expr ')' . '.' IDENT
   49 expr: '(' expr ')' .

    '['  shift, and go to state 151
    '.'  shift, and go to state 152

    $default  reduce using rule 49 (expr)


state 119

   87 field: IDENT '=' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 159
    table_constructor  go to state 41


state 120

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   88 field: '[' expr . ']' '=' expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96
    ']'        shift, and go to state 160


state 121

   91 field_sep: ';' .

    $default  reduce using rule 91 (field_sep)


state 122

   90 field_sep: ',' .

    $default  reduce using rule 90 (field_sep)


state 123

   83 table_constructor: '{' field_list '}' .

    $default  reduce using rule 83 (table_constructor)


state 124

   84 table_constructor: '{' field_list field_sep . '}'
   86 field_list: field_list field_sep . field

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '['      shift, and go to state 72
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37
    '}'      shift, and go to state 161

    var                go to state 38
    function_call      go to state 39
    expr               go to state 74
    table_constructor  go to state 41
    field              go to state 162


state 125

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   68     | expr AND expr .
   69     | expr . OR expr

    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 68 (expr)


state 126

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   69     | expr OR expr .

    AND        shift, and go to state 77
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 69 (expr)


state 127

   14 stmt: IF expr THEN block . elseif_seq END
   15     | IF expr THEN block . elseif_seq ELSE block END

    $default  reduce using rule 23 (elseif_seq)

    elseif_seq  go to state 163


state 128

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   66     | expr EQL expr .
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 66 (expr)


state 129

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   67     | expr NOT_EQL expr .
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 67 (expr)


state 130

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   63     | expr LE expr .
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 63 (expr)


state 131

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   65     | expr GE expr .
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 65 (expr)


state 132

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   55     | expr FLOOR_DIV expr .
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    '^'  shift, and go to state 96

    $default  reduce using rule 55 (expr)


state 133

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   61     | expr CONCAT expr .
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 61 (expr)


state 134

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   64     | expr '>' expr .
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 64 (expr)


state 135

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   62     | expr '<' expr .
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 62 (expr)


state 136

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   60     | expr '|' expr .
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 60 (expr)


state 137

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   59     | expr '~' expr .
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 59 (expr)


state 138

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   58     | expr '&' expr .
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 58 (expr)


state 139

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   53     | expr '+' expr .
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 53 (expr)


state 140

   51 expr: expr . '-' expr
   51     | expr '-' expr .
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    FLOOR_DIV  shift, and go to state 84
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 51 (expr)


state 141

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   52     | expr '*' expr .
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    '^'  shift, and go to state 96

    $default  reduce using rule 52 (expr)


state 142

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   54     | expr '/' expr .
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    '^'  shift, and go to state 96

    $default  reduce using rule 54 (expr)


state 143

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   57     | expr '%' expr .
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    '^'  shift, and go to state 96

    $default  reduce using rule 57 (expr)


state 144

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   56     | expr '^' expr .
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    '^'  shift, and go to state 96

    $default  reduce using rule 56 (expr)


state 145

   20 stmt: LOCAL FUNCTION IDENT '(' . param_list ')' block END

    VAR_ARG  shift, and go to state 115
    IDENT    shift, and go to state 43

    $default  reduce using rule 78 (param_list)

    ident_list  go to state 116
    param_list  go to state 164


state 146

   22 stmt: LOCAL ident_list '=' expr_seq .
   40 expr_seq: expr_seq . ',' expr

    ','  shift, and go to state 99

    $default  reduce using rule 22 (stmt)


state 147

   40 expr_seq: expr_seq ',' expr .
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 40 (expr_seq)


state 148

   13 stmt: REPEAT block UNTIL expr .
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 13 (stmt)


state 149

   12 stmt: WHILE expr DO block . END

    END  shift, and go to state 165


state 150

   75 args: '(' expr_seq ')' .

    $default  reduce using rule 75 (args)


state 151

   34 var: '(' expr ')' '[' . expr ']'

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 166
    table_constructor  go to state 41


state 152

   35 var: '(' expr ')' '.' . IDENT

    IDENT  shift, and go to state 167


state 153

   30 var: var '[' expr ']' .

    $default  reduce using rule 30 (var)


state 154

   32 var: function_call '[' expr ']' .

    $default  reduce using rule 32 (var)


state 155

   16 stmt: FOR IDENT '=' expr ',' . expr DO block END
   17     | FOR IDENT '=' expr ',' . expr ',' expr DO block END

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 168
    table_constructor  go to state 41


state 156

   18 stmt: FOR ident_list IN expr_seq DO . block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 169
    block_tmp  go to state 3


state 157

   38 ident_list: ident_list ',' . IDENT
   80 param_list: ident_list ',' . VAR_ARG

    VAR_ARG  shift, and go to state 170
    IDENT    shift, and go to state 114


state 158

   19 stmt: FUNCTION IDENT '(' param_list ')' . block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 171
    block_tmp  go to state 3


state 159

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   87 field: IDENT '=' expr .

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 87 (field)


state 160

   88 field: '[' expr ']' . '=' expr

    '='  shift, and go to state 172


state 161

   84 table_constructor: '{' field_list field_sep '}' .

    $default  reduce using rule 84 (table_constructor)


state 162

   86 field_list: field_list field_sep field .

    $default  reduce using rule 86 (field_list)


state 163

   14 stmt: IF expr THEN block elseif_seq . END
   15     | IF expr THEN block elseif_seq . ELSE block END
   24 elseif_seq: elseif_seq . ELSEIF expr THEN block

    ELSE    shift, and go to state 173
    ELSEIF  shift, and go to state 174
    END     shift, and go to state 175


state 164

   20 stmt: LOCAL FUNCTION IDENT '(' param_list . ')' block END

    ')'  shift, and go to state 176


state 165

   12 stmt: WHILE expr DO block END .

    $default  reduce using rule 12 (stmt)


state 166

   34 var: '(' expr ')' '[' expr . ']'
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96
    ']'        shift, and go to state 177


state 167

   35 var: '(' expr ')' '.' IDENT .

    $default  reduce using rule 35 (var)


state 168

   16 stmt: FOR IDENT '=' expr ',' expr . DO block END
   17     | FOR IDENT '=' expr ',' expr . ',' expr DO block END
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    DO         shift, and go to state 178
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96
    ','        shift, and go to state 179


state 169

   18 stmt: FOR ident_list IN expr_seq DO block . END

    END  shift, and go to state 180


state 170

   80 param_list: ident_list ',' VAR_ARG .

    $default  reduce using rule 80 (param_list)


state 171

   19 stmt: FUNCTION IDENT '(' param_list ')' block . END

    END  shift, and go to state 181


state 172

   88 field: '[' expr ']' '=' . expr

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 182
    table_constructor  go to state 41


state 173

   15 stmt: IF expr THEN block elseif_seq ELSE . block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 183
    block_tmp  go to state 3


state 174

   24 elseif_seq: elseif_seq ELSEIF . expr THEN block

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 184
    table_constructor  go to state 41


state 175

   14 stmt: IF expr THEN block elseif_seq END .

    $default  reduce using rule 14 (stmt)


state 176

   20 stmt: LOCAL FUNCTION IDENT '(' param_list ')' . block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 185
    block_tmp  go to state 3


state 177

   34 var: '(' expr ')' '[' expr ']' .

    $default  reduce using rule 34 (var)


state 178

   16 stmt: FOR IDENT '=' expr ',' expr DO . block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 186
    block_tmp  go to state 3


state 179

   17 stmt: FOR IDENT '=' expr ',' expr ',' . expr DO block END

    FALSE    shift, and go to state 26
    NIL      shift, and go to state 27
    NOT      shift, and go to state 28
    TRUE     shift, and go to state 29
    VAR_ARG  shift, and go to state 30
    IDENT    shift, and go to state 14
    NUMBER   shift, and go to state 31
    STRING   shift, and go to state 32
    '~'      shift, and go to state 33
    '-'      shift, and go to state 34
    '('      shift, and go to state 35
    '#'      shift, and go to state 36
    '{'      shift, and go to state 37

    var                go to state 38
    function_call      go to state 39
    expr               go to state 187
    table_constructor  go to state 41


state 180

   18 stmt: FOR ident_list IN expr_seq DO block END .

    $default  reduce using rule 18 (stmt)


state 181

   19 stmt: FUNCTION IDENT '(' param_list ')' block END .

    $default  reduce using rule 19 (stmt)


state 182

   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr
   88 field: '[' expr ']' '=' expr .

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96

    $default  reduce using rule 88 (field)


state 183

   15 stmt: IF expr THEN block elseif_seq ELSE block . END

    END  shift, and go to state 188


state 184

   24 elseif_seq: elseif_seq ELSEIF expr . THEN block
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    OR         shift, and go to state 78
    THEN       shift, and go to state 189
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96


state 185

   20 stmt: LOCAL FUNCTION IDENT '(' param_list ')' block . END

    END  shift, and go to state 190


state 186

   16 stmt: FOR IDENT '=' expr ',' expr DO block . END

    END  shift, and go to state 191


state 187

   17 stmt: FOR IDENT '=' expr ',' expr ',' expr . DO block END
   51 expr: expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '+' expr
   54     | expr . '/' expr
   55     | expr . FLOOR_DIV expr
   56     | expr . '^' expr
   57     | expr . '%' expr
   58     | expr . '&' expr
   59     | expr . '~' expr
   60     | expr . '|' expr
   61     | expr . CONCAT expr
   62     | expr . '<' expr
   63     | expr . LE expr
   64     | expr . '>' expr
   65     | expr . GE expr
   66     | expr . EQL expr
   67     | expr . NOT_EQL expr
   68     | expr . AND expr
   69     | expr . OR expr

    AND        shift, and go to state 77
    DO         shift, and go to state 192
    OR         shift, and go to state 78
    EQL        shift, and go to state 80
    NOT_EQL    shift, and go to state 81
    LE         shift, and go to state 82
    GE         shift, and go to state 83
    FLOOR_DIV  shift, and go to state 84
    CONCAT     shift, and go to state 85
    '>'        shift, and go to state 86
    '<'        shift, and go to state 87
    '|'        shift, and go to state 88
    '~'        shift, and go to state 89
    '&'        shift, and go to state 90
    '+'        shift, and go to state 91
    '-'        shift, and go to state 92
    '*'        shift, and go to state 93
    '/'        shift, and go to state 94
    '%'        shift, and go to state 95
    '^'        shift, and go to state 96


state 188

   15 stmt: IF expr THEN block elseif_seq ELSE block END .

    $default  reduce using rule 15 (stmt)


state 189

   24 elseif_seq: elseif_seq ELSEIF expr THEN . block

    $default  reduce using rule 5 (block_tmp)

    block      go to state 193
    block_tmp  go to state 3


state 190

   20 stmt: LOCAL FUNCTION IDENT '(' param_list ')' block END .

    $default  reduce using rule 20 (stmt)


state 191

   16 stmt: FOR IDENT '=' expr ',' expr DO block END .

    $default  reduce using rule 16 (stmt)


state 192

   17 stmt: FOR IDENT '=' expr ',' expr ',' expr DO . block END

    $default  reduce using rule 5 (block_tmp)

    block      go to state 194
    block_tmp  go to state 3


state 193

   24 elseif_seq: elseif_seq ELSEIF expr THEN block .

    $default  reduce using rule 24 (elseif_seq)


state 194

   17 stmt: FOR IDENT '=' expr ',' expr ',' expr DO block . END

    END  shift, and go to state 195


state 195

   17 stmt: FOR IDENT '=' expr ',' expr ',' expr DO block END .

    $default  reduce using rule 17 (stmt)
